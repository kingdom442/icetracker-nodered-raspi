[
    {
        "id": "455c57e6.9245b8",
        "type": "tab",
        "label": "BeaconScan_MagnetField",
        "disabled": true,
        "info": ""
    },
    {
        "id": "16cfb435.b64c6c",
        "type": "tab",
        "label": "BeaconScan",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b7025bcb.291988",
        "type": "tab",
        "label": "CheckShift",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6654dfe5.f7b32",
        "type": "tab",
        "label": "BeaconSimulation",
        "disabled": true,
        "info": ""
    },
    {
        "id": "7d875c7c.180ba4",
        "type": "mqtt-broker",
        "z": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": ""
    },
    {
        "id": "fcef7bbe.1192a8",
        "type": "bluuki_scan_noble",
        "z": "455c57e6.9245b8",
        "uuids": "",
        "duplicates": false,
        "name": "",
        "x": 500,
        "y": 324.0000305175781,
        "wires": [
            []
        ]
    },
    {
        "id": "b709ad8e.aba4e",
        "type": "inject",
        "z": "455c57e6.9245b8",
        "name": "",
        "topic": "",
        "payload": "{\"scan\": true}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 128,
        "y": 236,
        "wires": [
            [
                "fcef7bbe.1192a8"
            ]
        ]
    },
    {
        "id": "334fb4fa.37d03c",
        "type": "inject",
        "z": "455c57e6.9245b8",
        "name": "",
        "topic": "",
        "payload": "{\"scan\": false} ",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 134.3333282470703,
        "y": 338.3333511352539,
        "wires": [
            [
                "fcef7bbe.1192a8"
            ]
        ]
    },
    {
        "id": "4878f64e.52bdd8",
        "type": "function",
        "z": "6654dfe5.f7b32",
        "name": "loop",
        "func": "// Loop function\n// Top output provides triger for next actions\n// Botton output should be connected to the input through a dealy\n// The msg.payload can consis one of actions: start, stop, toggle\n// Other content is ignored\n// On the outoput the msg.payload contains current loop state\n\ncontext.loop = context.loop || \"stop\";\ncontext.loops = context.loops || 0;\n\n//console.log(\"topic :\" + msg.topic);\n//console.log(\"loop  :\" + context.loop);\n//console.log(\"loops :\" + context.loops);\n//console.log(\"action:\" + msg.payload);\n\nswitch (msg.payload) {\n\tcase \"stop\":\n\t\tcontext.loops = context.loops + 1;\n\t\tmsg.payload = \"stopped\";\n\t\tcontext.loop = \"stop\";\n\t\treturn [msg,null];\n\tcase \"toggle\":\n\t\tif (context.loop == \"start\") {\n\t\t\tmsg.payload = \"stopped\";\n\t\t\tcontext.loop = \"stop\";\n\t\t\treturn [msg,null];\n\t\t} else {\n\t\t\tmsg.payload = \"started\";\n\t\t\tcontext.loop = \"loop\";\n\t\t\tcontext.loops = 1;\n\t\t\treturn [msg,msg];\n\t\t}\n\t\tbreak;\n\tcase \"start\":\n\t\tmsg.payload = \"started\";\n\t\tcontext.loop = \"loop\";\n\t\tcontext.loops = 1;\n\t\treturn [msg,msg];\n\tdefault:\n\t\tif (context.loop == \"loop\") {\n\t\t\tcontext.loops = context.loops + 1;\n\t\t\tmsg.payload = \"loop:\" + context.loops;\n\t\t\treturn [msg,msg];\n\t\t} else {\n\t\t\treturn [null,null]; \n\t\t}\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 376.99998474121094,
        "y": 80,
        "wires": [
            [
                "7f6aeab2.33b984"
            ],
            [
                "275a9c32.5b4d54"
            ]
        ]
    },
    {
        "id": "275a9c32.5b4d54",
        "type": "delay",
        "z": "6654dfe5.f7b32",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 380.99998474121094,
        "y": 230,
        "wires": [
            [
                "4878f64e.52bdd8"
            ]
        ]
    },
    {
        "id": "f8ff26cb.af4958",
        "type": "inject",
        "z": "6654dfe5.f7b32",
        "name": "toggle loop 1",
        "topic": "loop1",
        "payload": "toggle",
        "payloadType": "string",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 168.99998474121094,
        "y": 79,
        "wires": [
            [
                "4878f64e.52bdd8"
            ]
        ]
    },
    {
        "id": "7f6aeab2.33b984",
        "type": "function",
        "z": "6654dfe5.f7b32",
        "name": "",
        "func": "var randRSSI =  0 - Math.floor(Math.random() * (90 - 20) + 20);\nmsg.payload = {\n  beaconId: 'TestBeacon',\n  rssi: randRSSI,\n  data: {\n      magnetismX: 1442, magnetismY: -4244, magnetismZ: 4224\n  }\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580.8332977294922,
        "y": 73.66667175292969,
        "wires": [
            [
                "dca21f4e.de394",
                "2a382561.82360a"
            ]
        ]
    },
    {
        "id": "dca21f4e.de394",
        "type": "debug",
        "z": "6654dfe5.f7b32",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 666.8333282470703,
        "y": 157,
        "wires": []
    },
    {
        "id": "2a382561.82360a",
        "type": "tcp out",
        "z": "6654dfe5.f7b32",
        "host": "192.168.0.9",
        "port": "7777",
        "beserver": "client",
        "base64": false,
        "end": false,
        "name": "",
        "x": 940,
        "y": 80,
        "wires": []
    },
    {
        "id": "34cdc3cc.e4927c",
        "type": "tcp out",
        "z": "455c57e6.9245b8",
        "host": "192.168.0.9",
        "port": "7777",
        "beserver": "client",
        "base64": false,
        "end": true,
        "name": "",
        "x": 1020,
        "y": 380,
        "wires": []
    },
    {
        "id": "5a314a59.48c814",
        "type": "function",
        "z": "455c57e6.9245b8",
        "name": "PrepareMsg",
        "func": "\nmsg.payload = {\n  timestamp: new Date().getTime(),\n  receiverId: 'RPI1',\n  beacon: {\n      id: msg.peripheralUuid,\n      localName: msg.localName\n  },\n  rssi: msg.rssi\n};\nif(msg.magnetfielddata) {\n    msg.payload.magnetfielddata =  {\n      data: msg.magnetfielddata.data,\n      X: msg.magnetfielddata.X,\n      Y: msg.magnetfielddata.Y,\n      Z: msg.magnetfielddata.Z\n    };\n}\nmsg.payload = JSON.stringify(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 320,
        "wires": [
            [
                "34cdc3cc.e4927c"
            ]
        ]
    },
    {
        "id": "50085a22.98f194",
        "type": "inject",
        "z": "455c57e6.9245b8",
        "name": "",
        "topic": "",
        "payload": "RPI1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 151,
        "y": 89,
        "wires": [
            [
                "3d0ac92f.9369b6"
            ]
        ]
    },
    {
        "id": "3d0ac92f.9369b6",
        "type": "file",
        "z": "455c57e6.9245b8",
        "name": "StoreDeviceId",
        "filename": ".node-red-device-id",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 420,
        "y": 80,
        "wires": []
    },
    {
        "id": "4c73a745.9b2fc8",
        "type": "file in",
        "z": "455c57e6.9245b8",
        "name": "",
        "filename": "TODO: READ DEVICE ID FROM FILE",
        "format": "utf8",
        "x": 545,
        "y": 582,
        "wires": [
            []
        ]
    },
    {
        "id": "f8de08ce.751b38",
        "type": "bluuki_scan_noble",
        "z": "16cfb435.b64c6c",
        "uuids": "",
        "duplicates": false,
        "name": "",
        "x": 430,
        "y": 240,
        "wires": [
            [
                "410893b4.c0a84c"
            ]
        ]
    },
    {
        "id": "e0c8ed9d.fba76",
        "type": "inject",
        "z": "16cfb435.b64c6c",
        "name": "",
        "topic": "",
        "payload": "{\"scan\": true}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 200,
        "wires": [
            [
                "f8de08ce.751b38"
            ]
        ]
    },
    {
        "id": "9bdb43d.10e54c",
        "type": "inject",
        "z": "16cfb435.b64c6c",
        "name": "",
        "topic": "",
        "payload": "{\"scan\": false}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 136.3333282470703,
        "y": 302.3333511352539,
        "wires": [
            [
                "f8de08ce.751b38"
            ]
        ]
    },
    {
        "id": "410893b4.c0a84c",
        "type": "function",
        "z": "16cfb435.b64c6c",
        "name": "PrepareMsg",
        "func": "\nmsg.payload = {\n  timestamp: new Date().getTime(),\n  beacon: {\n      id: msg.peripheralUuid,\n      localName: msg.localName\n  },\n  rssi: msg.rssi\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 240,
        "wires": [
            [
                "ee4fe30d.e6b69",
                "4241d186.4dd43"
            ]
        ]
    },
    {
        "id": "a5674b20.f2bba8",
        "type": "link in",
        "z": "b7025bcb.291988",
        "name": "CheckShift",
        "links": [
            "ee4fe30d.e6b69"
        ],
        "x": 115,
        "y": 120,
        "wires": [
            [
                "9ad7e76.2a6ed18"
            ]
        ]
    },
    {
        "id": "ee4fe30d.e6b69",
        "type": "link out",
        "z": "16cfb435.b64c6c",
        "name": "",
        "links": [
            "a5674b20.f2bba8"
        ],
        "x": 951,
        "y": 243,
        "wires": []
    },
    {
        "id": "eb96a2be.fd9fb",
        "type": "function",
        "z": "b7025bcb.291988",
        "name": "CheckState",
        "func": "\nvar threshold = flow.get('threshold')||0;\nif(threshold !== 0){\n    node.status({fill:\"green\",shape:\"dot\",text:\"threshold set to \" + threshold});\n} else {\n    node.status({fill:\"red\",shape:\"dot\",text:\"no threshold set\"});\n}\n\nvar onBench = msg.payload.rssi > threshold; // negative values\nmsg.payload.playerOnBenchScan = onBench;\nmsg.payload.threshold = threshold;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 120,
        "wires": [
            [
                "470d7432.e4c56c"
            ]
        ]
    },
    {
        "id": "df12300a.6d162",
        "type": "inject",
        "z": "b7025bcb.291988",
        "name": "",
        "topic": "",
        "payload": "-70",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 260,
        "wires": [
            [
                "1c9f2c35.c40f44"
            ]
        ]
    },
    {
        "id": "1c9f2c35.c40f44",
        "type": "file",
        "z": "b7025bcb.291988",
        "name": "Store Threshold",
        "filename": ".toi-threshold",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "x": 320,
        "y": 260,
        "wires": []
    },
    {
        "id": "9ad7e76.2a6ed18",
        "type": "switch",
        "z": "b7025bcb.291988",
        "name": "checkThresholdSet",
        "property": "threshold",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 120,
        "wires": [
            [
                "eb96a2be.fd9fb"
            ],
            [
                "6b8c1b9.4a579e4"
            ]
        ]
    },
    {
        "id": "6b8c1b9.4a579e4",
        "type": "file in",
        "z": "b7025bcb.291988",
        "name": "",
        "filename": ".toi-threshold",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 490,
        "y": 200,
        "wires": [
            [
                "279dd9c8.956dd6"
            ]
        ]
    },
    {
        "id": "279dd9c8.956dd6",
        "type": "function",
        "z": "b7025bcb.291988",
        "name": "",
        "func": "flow.set('threshold', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ebd627cf.08f9f8",
        "type": "function",
        "z": "b7025bcb.291988",
        "name": "",
        "func": "if(msg.payload.playerOnBenchDetected) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"Player on bench detected\"});\n} else {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Player on ice detected\"});\n}\nmsg.payload = JSON.stringify(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 240,
        "wires": [
            [
                "72d4b1ea.d817d"
            ]
        ]
    },
    {
        "id": "470d7432.e4c56c",
        "type": "function",
        "z": "b7025bcb.291988",
        "name": "FilterFlickering",
        "func": "\nvar lastStates = flow.get('lastStates') || [];\nlastStates.push(msg.payload.playerOnBenchScan);\nif(!lastStates || lastStates.length <= 5) {\n    flow.set('lastStates', lastStates);\n    return msg;\n}\nlastStates.shift();\nflow.set('lastStates', lastStates);\n//node.warn(lastStates.toString());\n\nmsg.payload.playerOnBenchDetected = lastStates.filter((val) => \n{\n   return val;\n}).length >= 3;\n\nmsg.payload.playerOnBenchReal = !flow.get('onIce');\nmsg.payload.gameRunning = flow.get('gameRunning');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 120,
        "wires": [
            [
                "c45c0fb0.fe411"
            ]
        ]
    },
    {
        "id": "9e57e051.48534",
        "type": "debug",
        "z": "b7025bcb.291988",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1250,
        "y": 100,
        "wires": []
    },
    {
        "id": "a81250d5.7f96b",
        "type": "inject",
        "z": "b7025bcb.291988",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 700,
        "y": 280,
        "wires": [
            [
                "32fb6fcb.e2529"
            ]
        ]
    },
    {
        "id": "32fb6fcb.e2529",
        "type": "function",
        "z": "b7025bcb.291988",
        "name": "ToggleRealIceState",
        "func": "\nvar onIce = flow.get('onIce') || false;\nonIce = !onIce;\nflow.set('onIce', onIce);\n\nif(onIce) { \n    node.status({fill:\"green\",shape:\"dot\",text:\"Player on ice\"});\n} else {\n    node.status({fill:\"red\",shape:\"dot\",text:\"Player on bench\"});\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "72d4b1ea.d817d",
        "type": "tcp out",
        "z": "b7025bcb.291988",
        "host": "192.168.1.5",
        "port": "7777",
        "beserver": "client",
        "base64": false,
        "end": true,
        "name": "",
        "x": 1240,
        "y": 460,
        "wires": []
    },
    {
        "id": "bc0f3b04.c72148",
        "type": "inject",
        "z": "b7025bcb.291988",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 700,
        "y": 360,
        "wires": [
            [
                "a9665c36.d585e"
            ]
        ]
    },
    {
        "id": "a9665c36.d585e",
        "type": "function",
        "z": "b7025bcb.291988",
        "name": "ToggleGameRunning",
        "func": "\nvar gameRunning = flow.get('gameRunning') || false;\ngameRunning = !gameRunning;\nflow.set('gameRunning', gameRunning);\n\nif(gameRunning) { \n    node.status({fill:\"green\",shape:\"dot\",text:\"Game running\"});\n} else {\n    node.status({fill:\"red\",shape:\"dot\",text:\"Game stopped\"});\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "c45c0fb0.fe411",
        "type": "switch",
        "z": "b7025bcb.291988",
        "name": "",
        "property": "payload.gameRunning",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 1081.1666870117188,
        "y": 183.6666717529297,
        "wires": [
            [
                "ebd627cf.08f9f8",
                "9e57e051.48534"
            ]
        ]
    },
    {
        "id": "4241d186.4dd43",
        "type": "debug",
        "z": "16cfb435.b64c6c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 940,
        "y": 182,
        "wires": []
    }
]